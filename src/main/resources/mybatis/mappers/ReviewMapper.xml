<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="hotelproject.mapper.ReviewMapper">
<!-- 리뷰 추가 -->
    <insert id="addReview" parameterType="hotelproject.repositories.vo.ReviewVo">
        INSERT INTO reviews (user_no, hotel_no, comment, rating, created_at)
        VALUES (#{userNo}, #{hotelNo}, #{comment}, #{rating}, NOW())
    </insert>

    <!-- 특정 호텔의 리뷰 목록 조회 -->
    <select id="getReviewsByHotel" parameterType="int" resultType="hotelproject.repositories.vo.ReviewVo">
        SELECT * FROM reviews WHERE hotel_no = #{hotelNo} ORDER BY created_at DESC
    </select>

    <!-- 특정 유저의 리뷰 목록 조회 -->
    <select id="getReviewsByUser" parameterType="int" resultType="hotelproject.repositories.vo.ReviewVo">
        SELECT * FROM reviews WHERE user_no = #{userNo} ORDER BY created_at DESC
    </select>

    <!-- 특정 리뷰 조회 -->
    <select id="getReviewById" parameterType="int" resultType="hotelproject.repositories.vo.ReviewVo">
        SELECT * FROM reviews WHERE review_no = #{reviewNo}
    </select>

    <!-- 리뷰 수정 -->
    <update id="updateReview" parameterType="hotelproject.repositories.vo.ReviewVo">
        UPDATE reviews SET comment = #{comment}, rating = #{rating}, updated_at = NOW()
        WHERE review_no = #{reviewNo} AND user_no = #{userNo}
    </update>

    <!-- 리뷰 삭제 (유저가 자신의 리뷰 삭제) -->
    <delete id="deleteReviewByUser" parameterType="map">
        DELETE FROM reviews WHERE review_no = #{reviewNo} AND user_no = #{userNo}
    </delete>

    <!-- 리뷰 삭제 (어드민이 삭제) -->
    <delete id="deleteReviewByAdmin" parameterType="int">
        DELETE FROM reviews WHERE review_no = #{reviewNo}
    </delete>

    <!-- 호텔 별점 평균 업데이트 -->
    <update id="updateHotelRating" parameterType="int">
        UPDATE hotels SET rating = (SELECT AVG(rating) FROM reviews WHERE hotel_no = #{hotelNo})
        WHERE hotel_no = #{hotelNo}
    </update>

    <!-- 모든 리뷰 조회 (관리자용) -->
    <select id="getAllReviews" resultType="hotelproject.repositories.vo.ReviewVo">
        SELECT * FROM reviews ORDER BY created_at DESC
    </select>
</mapper>
